###############################################################################
#
# IAR ANSI C/C++ Compiler V8.50.9.278/W32 for ARM         04/Feb/2022  12:58:47
# Copyright 1999-2020 IAR Systems AB.
#
#    Cpu mode                        
#    Endian                       =  little
#    Source file                  =
#        C:\Project_data\ECM_data\symax_safetycore\Symax-sri_safetycore_unit_test\symax_sri_app-DQ_Test_6_Relay_Testing\generic_app_GMI\FlexMouse\Drivers\module_tim1.c
#    Command line                 =
#        -f C:\Users\610126~1\AppData\Local\Temp\EWE5D7.tmp
#        (C:\Project_data\ECM_data\symax_safetycore\Symax-sri_safetycore_unit_test\symax_sri_app-DQ_Test_6_Relay_Testing\generic_app_GMI\FlexMouse\Drivers\module_tim1.c
#        -D USE_FULL_LL_DRIVER -D STM32G030xx -D USE_HAL_DRIVER -lC
#        C:\Project_data\ECM_data\symax_safetycore\Symax-sri_safetycore_unit_test\symax_sri_app-DQ_Test_6_Relay_Testing\generic_app_GMI\EWARM\generic_app_stm32G030K8Tx\List
#        -o
#        C:\Project_data\ECM_data\symax_safetycore\Symax-sri_safetycore_unit_test\symax_sri_app-DQ_Test_6_Relay_Testing\generic_app_GMI\EWARM\generic_app_stm32G030K8Tx\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M0+ -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 8.4\arm\inc\c\DLib_Config_Full.h"
#        -I
#        C:\Project_data\ECM_data\symax_safetycore\Symax-sri_safetycore_unit_test\symax_sri_app-DQ_Test_6_Relay_Testing\generic_app_GMI\EWARM/../Inc\\
#        -I
#        C:\Project_data\ECM_data\symax_safetycore\Symax-sri_safetycore_unit_test\symax_sri_app-DQ_Test_6_Relay_Testing\generic_app_GMI\EWARM/../Drivers/STM32G0xx_HAL_Driver/Inc\\
#        -I
#        C:\Project_data\ECM_data\symax_safetycore\Symax-sri_safetycore_unit_test\symax_sri_app-DQ_Test_6_Relay_Testing\generic_app_GMI\EWARM/../Drivers/CMSIS/Device/ST/STM32G0xx/Include\\
#        -I
#        C:\Project_data\ECM_data\symax_safetycore\Symax-sri_safetycore_unit_test\symax_sri_app-DQ_Test_6_Relay_Testing\generic_app_GMI\EWARM/../Drivers/CMSIS/Device/ST/STM32G0xx/Source\\
#        -I
#        C:\Project_data\ECM_data\symax_safetycore\Symax-sri_safetycore_unit_test\symax_sri_app-DQ_Test_6_Relay_Testing\generic_app_GMI\EWARM/../Drivers/CMSIS/Include\\
#        -I
#        C:\Project_data\ECM_data\symax_safetycore\Symax-sri_safetycore_unit_test\symax_sri_app-DQ_Test_6_Relay_Testing\generic_app_GMI\EWARM/../FlexMouse\\
#        -I
#        C:\Project_data\ECM_data\symax_safetycore\Symax-sri_safetycore_unit_test\symax_sri_app-DQ_Test_6_Relay_Testing\generic_app_GMI\EWARM/../FlexMouse/Kernel\\
#        -I
#        C:\Project_data\ECM_data\symax_safetycore\Symax-sri_safetycore_unit_test\symax_sri_app-DQ_Test_6_Relay_Testing\generic_app_GMI\EWARM/../FlexMouse/Drivers\\
#        -I
#        C:\Project_data\ECM_data\symax_safetycore\Symax-sri_safetycore_unit_test\symax_sri_app-DQ_Test_6_Relay_Testing\generic_app_GMI\EWARM/../FlexMouse/Memory\\
#        -I
#        C:\Project_data\ECM_data\symax_safetycore\Symax-sri_safetycore_unit_test\symax_sri_app-DQ_Test_6_Relay_Testing\generic_app_GMI\EWARM/../FlexMouse/Features\\
#        -I
#        C:\Project_data\ECM_data\symax_safetycore\Symax-sri_safetycore_unit_test\symax_sri_app-DQ_Test_6_Relay_Testing\generic_app_GMI\EWARM/../FlexMouse/Regal\\
#        -I
#        C:\Project_data\ECM_data\symax_safetycore\Symax-sri_safetycore_unit_test\symax_sri_app-DQ_Test_6_Relay_Testing\generic_app_GMI\EWARM/../Drivers/STM32G0xx_HAL_Driver/Inc/Legacy\\
#        -On)
#    Locale                       =  C
#    List file                    =
#        C:\Project_data\ECM_data\symax_safetycore\Symax-sri_safetycore_unit_test\symax_sri_app-DQ_Test_6_Relay_Testing\generic_app_GMI\EWARM\generic_app_stm32G030K8Tx\List\module_tim1.lst
#    Object file                  =
#        C:\Project_data\ECM_data\symax_safetycore\Symax-sri_safetycore_unit_test\symax_sri_app-DQ_Test_6_Relay_Testing\generic_app_GMI\EWARM\generic_app_stm32G030K8Tx\Obj\module_tim1.o
#    Runtime model:                  
#      __SystemLibrary            =  DLib
#      __dlib_full_locale_support =  1
#      __dlib_version             =  6
#
###############################################################################

C:\Project_data\ECM_data\symax_safetycore\Symax-sri_safetycore_unit_test\symax_sri_app-DQ_Test_6_Relay_Testing\generic_app_GMI\FlexMouse\Drivers\module_tim1.c
      1          /**
      2          *************************************************************************************
      3          * @file    module_tim1.c 
      4          * @author  Satya Akkina
      5          * @version V1.0
      6          * @date    Jan 11 2021
      7          * @brief   Module for Tim1
      8          * @note    
      9          *****************************************************************************
     10          */
     11          
     12          #include "module_tim1.h"
     13          
     14          // Content ---------------------------------------------------------------------
     15          // Function prototypes
     16          void assign_Tim1DrvMem(void);
     17          
     18          // Module States
     19          enum AppStates {
     20            MEMORY_INIT_MODULE,
     21            INIT_MODULE,
     22            RUN_MODULE,
     23            // additional states to be added here as necessary.
     24            IRQ_MODULE = DEFAULT_IRQ_STATE,
     25            KILL_MODULE = KILL_APP
     26          };
     27          
     28          // External Variables
     29          extern TIM1_Control tim1_Control;
     30          extern ProcessInfo processInfoTable[];
     31          
     32          // Global variables specific to this module

   \                                 In section .bss, align 4
     33          static Ram_Buf_Handle tim1_Control_StructMem_u32;
   \                     tim1_Control_StructMem_u32:
   \        0x0                      DS8 4
     34          
     35          /**
     36          *******************************************************************************
     37          * @brief   State machine for Digital Tim1 Module
     38          * @details
     39          * @param   drv_id_u8, prev_state_u8, next_state_u8, irq_id_u8
     40          * @retval  return_state_u8
     41          *******************************************************************************
     42          */

   \                                 In section .text, align 2, keep-with-next
     43          uint8_t moduleTim1_u32(uint8_t drv_id_u8, uint8_t prev_state_u8, uint8_t next_state_u8,
     44                                 uint8_t irq_id_u8)
     45          {
   \                     moduleTim1_u32: (+1)
   \        0x0   0xB5F2             PUSH     {R1,R4-R7,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x0015             MOVS     R5,R2
   \        0x6   0x001F             MOVS     R7,R3
     46            uint8_t return_state_u8 = MEMORY_INIT_MODULE;
   \        0x8   0x2600             MOVS     R6,#+0
     47            switch (next_state_u8)
   \        0xA   0x0028             MOVS     R0,R5
   \        0xC   0xB2C0             UXTB     R0,R0
   \        0xE   0x2800             CMP      R0,#+0
   \       0x10   0xD006             BEQ      ??moduleTim1_u32_0
   \       0x12   0x2801             CMP      R0,#+1
   \       0x14   0xD008             BEQ      ??moduleTim1_u32_1
   \       0x16   0x2802             CMP      R0,#+2
   \       0x18   0xD008             BEQ      ??moduleTim1_u32_2
   \       0x1A   0x28FF             CMP      R0,#+255
   \       0x1C   0xD008             BEQ      ??moduleTim1_u32_3
   \       0x1E   0xE01B             B        ??moduleTim1_u32_4
     48            {
     49            case MEMORY_INIT_MODULE:
     50              {
     51                assign_Tim1DrvMem(); // Assign structured memory
   \                     ??moduleTim1_u32_0: (+1)
   \       0x20   0x....'....        BL       assign_Tim1DrvMem
     52                return_state_u8 = INIT_MODULE;
   \       0x24   0x2101             MOVS     R1,#+1
     53                break;
   \       0x26   0xE018             B        ??moduleTim1_u32_5
     54              }
     55            case INIT_MODULE:                                                             
     56              {
     57                //assign_Tim1DrvMem(); //Assign RAM memory for ADC structures
     58                
     59                return_state_u8 = RUN_MODULE;
   \                     ??moduleTim1_u32_1: (+1)
   \       0x28   0x2102             MOVS     R1,#+2
     60                break;      
   \       0x2A   0xE016             B        ??moduleTim1_u32_5
     61              }   
     62            case RUN_MODULE:                                                             
     63              {
     64                //This Deamon need only execute once than kill this process, in case want to run it again programmer can enable this process again by 
     65                //set the processStatus parameter to 0x00 and set the nextStage parameter to stage 0 or any stage 
     66                return_state_u8 = KILL_MODULE; 
   \                     ??moduleTim1_u32_2: (+1)
   \       0x2C   0x21FF             MOVS     R1,#+255
     67                break;
   \       0x2E   0xE014             B        ??moduleTim1_u32_5
     68              }
     69            case KILL_MODULE: 
     70              {
     71                // The GPIO driver module must only be executed once.
     72                // Setting processStatus_u8 to PROCESS_STATUS_KILLED prevents the scheduler main loop from calling this module again.
     73                uint8_t table_index_u8 = getProcessInfoIndex(drv_id_u8);
   \                     ??moduleTim1_u32_3: (+1)
   \       0x30   0x0020             MOVS     R0,R4
   \       0x32   0xB2C0             UXTB     R0,R0
   \       0x34   0x....'....        BL       getProcessInfoIndex
     74                if (table_index_u8 != INDEX_NOT_FOUND) {
   \       0x38   0x0001             MOVS     R1,R0
   \       0x3A   0xB2C9             UXTB     R1,R1
   \       0x3C   0x29FF             CMP      R1,#+255
   \       0x3E   0xD009             BEQ      ??moduleTim1_u32_6
     75                  processInfoTable[table_index_u8].Sched_DrvData.processStatus_u8 = PROCESS_STATUS_KILLED;
   \       0x40   0x23FF             MOVS     R3,#+255
   \       0x42   0x....             LDR      R1,??DataTable1
   \       0x44   0x468C             MOV      R12,R1
   \       0x46   0x0002             MOVS     R2,R0
   \       0x48   0xB2D2             UXTB     R2,R2
   \       0x4A   0x2116             MOVS     R1,#+22
   \       0x4C   0x434A             MULS     R2,R1,R2
   \       0x4E   0x4661             MOV      R1,R12
   \       0x50   0x1889             ADDS     R1,R1,R2
   \       0x52   0x728B             STRB     R3,[R1, #+10]
     76                }
     77                return_state_u8 = KILL_MODULE;
   \                     ??moduleTim1_u32_6: (+1)
   \       0x54   0x21FF             MOVS     R1,#+255
     78                break;
   \       0x56   0xE000             B        ??moduleTim1_u32_5
     79              }
     80            default:
     81              {
     82                return_state_u8 = 10; 
   \                     ??moduleTim1_u32_4: (+1)
   \       0x58   0x210A             MOVS     R1,#+10
     83                break;
     84              }
     85            }
     86            return return_state_u8;
   \                     ??moduleTim1_u32_5: (+1)
   \       0x5A   0x0008             MOVS     R0,R1
   \       0x5C   0xB2C0             UXTB     R0,R0
   \       0x5E   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
     87          }
     88          
     89          /**
     90          ********************************************************************************************************************************
     91          * @brief   Assign structured memory
     92          * @details Assign structured memory for Tim1_Control
     93          * @retval  None
     94          ********************************************************************************************************************************
     95          */

   \                                 In section .text, align 2, keep-with-next
     96          void assign_Tim1DrvMem(){  
   \                     assign_Tim1DrvMem: (+1)
   \        0x0   0xB57C             PUSH     {R2-R6,LR}
     97            tim1_Control_StructMem_u32 =  StructMem_CreateInstance(MODULE_TIM1, sizeof(TIM1_Control), ACCESS_MODE_WRITE_ONLY, NULL, EMPTY_LIST);
   \        0x2   0x....             LDR      R5,??DataTable1_1
   \        0x4   0x2000             MOVS     R0,#+0
   \        0x6   0x9000             STR      R0,[SP, #+0]
   \        0x8   0x2300             MOVS     R3,#+0
   \        0xA   0x2202             MOVS     R2,#+2
   \        0xC   0x2108             MOVS     R1,#+8
   \        0xE   0x2002             MOVS     R0,#+2
   \       0x10   0x....'....        BL       StructMem_CreateInstance
   \       0x14   0x6028             STR      R0,[R5, #+0]
     98            (*tim1_Control_StructMem_u32).p_ramBuf_u8 = (uint8_t *)&tim1_Control ;    //map the ADC1 memory into the structured memory
   \       0x16   0x....             LDR      R4,??DataTable1_2
   \       0x18   0x6828             LDR      R0,[R5, #+0]
   \       0x1A   0x6004             STR      R4,[R0, #+0]
     99            uint8_t Drv_Tim1Index = getProcessInfoIndex(MODULE_TIM1);
   \       0x1C   0x2002             MOVS     R0,#+2
   \       0x1E   0x....'....        BL       getProcessInfoIndex
   \       0x22   0x0006             MOVS     R6,R0
    100            processInfoTable[Drv_Tim1Index].Sched_DrvData.p_masterSharedMem_u32 = tim1_Control_StructMem_u32;  
   \       0x24   0x....             LDR      R0,??DataTable1
   \       0x26   0x0031             MOVS     R1,R6
   \       0x28   0xB2C9             UXTB     R1,R1
   \       0x2A   0x2216             MOVS     R2,#+22
   \       0x2C   0x4351             MULS     R1,R2,R1
   \       0x2E   0x1840             ADDS     R0,R0,R1
   \       0x30   0x0001             MOVS     R1,R0
   \       0x32   0x310B             ADDS     R1,R1,#+11
   \       0x34   0x6828             LDR      R0,[R5, #+0]
   \       0x36   0x....'....        BL       __aeabi_uwrite4
    101            
    102            tim1_Control.tim1_ResultAvg.PWMInputDutyCycleAverageCalc_f = 0;
   \       0x3A   0x2000             MOVS     R0,#+0
   \       0x3C   0x6020             STR      R0,[R4, #+0]
    103            tim1_Control.tim1_ResultAvg.PWMInputFrequencyAverageCalc_u16 = 0;
   \       0x3E   0x2000             MOVS     R0,#+0
   \       0x40   0x80A0             STRH     R0,[R4, #+4]
    104          }
   \       0x42   0xBD73             POP      {R0,R1,R4-R6,PC}  ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \        0x0   0x....'....        DC32     processInfoTable

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \        0x0   0x....'....        DC32     tim1_Control_StructMem_u32

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \        0x0   0x....'....        DC32     tim1_Control
    105          
    106          
    107          
    108          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      24   assign_Tim1DrvMem
        24   -> StructMem_CreateInstance
        24   -> getProcessInfoIndex
        24 __aeabi_uwrite4
      24   moduleTim1_u32
        24   -> assign_Tim1DrvMem
        24   -> getProcessInfoIndex


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
      68  assign_Tim1DrvMem
      96  moduleTim1_u32
       4  tim1_Control_StructMem_u32

 
   4 bytes in section .bss
 176 bytes in section .text
 
 176 bytes of CODE memory
   4 bytes of DATA memory

Errors: none
Warnings: none
