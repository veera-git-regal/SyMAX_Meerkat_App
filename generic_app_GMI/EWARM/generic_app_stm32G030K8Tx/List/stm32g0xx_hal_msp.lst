###############################################################################
#
# IAR ANSI C/C++ Compiler V8.50.9.278/W32 for ARM         04/Feb/2022  12:58:55
# Copyright 1999-2020 IAR Systems AB.
#
#    Cpu mode                        
#    Endian                       =  little
#    Source file                  =
#        C:\Project_data\ECM_data\symax_safetycore\Symax-sri_safetycore_unit_test\symax_sri_app-DQ_Test_6_Relay_Testing\generic_app_GMI\Src\stm32g0xx_hal_msp.c
#    Command line                 =
#        -f C:\Users\610126~1\AppData\Local\Temp\EWE3.tmp
#        (C:\Project_data\ECM_data\symax_safetycore\Symax-sri_safetycore_unit_test\symax_sri_app-DQ_Test_6_Relay_Testing\generic_app_GMI\Src\stm32g0xx_hal_msp.c
#        -D USE_FULL_LL_DRIVER -D STM32G030xx -D USE_HAL_DRIVER -lC
#        C:\Project_data\ECM_data\symax_safetycore\Symax-sri_safetycore_unit_test\symax_sri_app-DQ_Test_6_Relay_Testing\generic_app_GMI\EWARM\generic_app_stm32G030K8Tx\List
#        -o
#        C:\Project_data\ECM_data\symax_safetycore\Symax-sri_safetycore_unit_test\symax_sri_app-DQ_Test_6_Relay_Testing\generic_app_GMI\EWARM\generic_app_stm32G030K8Tx\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M0+ -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 8.4\arm\inc\c\DLib_Config_Full.h"
#        -I
#        C:\Project_data\ECM_data\symax_safetycore\Symax-sri_safetycore_unit_test\symax_sri_app-DQ_Test_6_Relay_Testing\generic_app_GMI\EWARM/../Inc\\
#        -I
#        C:\Project_data\ECM_data\symax_safetycore\Symax-sri_safetycore_unit_test\symax_sri_app-DQ_Test_6_Relay_Testing\generic_app_GMI\EWARM/../Drivers/STM32G0xx_HAL_Driver/Inc\\
#        -I
#        C:\Project_data\ECM_data\symax_safetycore\Symax-sri_safetycore_unit_test\symax_sri_app-DQ_Test_6_Relay_Testing\generic_app_GMI\EWARM/../Drivers/CMSIS/Device/ST/STM32G0xx/Include\\
#        -I
#        C:\Project_data\ECM_data\symax_safetycore\Symax-sri_safetycore_unit_test\symax_sri_app-DQ_Test_6_Relay_Testing\generic_app_GMI\EWARM/../Drivers/CMSIS/Device/ST/STM32G0xx/Source\\
#        -I
#        C:\Project_data\ECM_data\symax_safetycore\Symax-sri_safetycore_unit_test\symax_sri_app-DQ_Test_6_Relay_Testing\generic_app_GMI\EWARM/../Drivers/CMSIS/Include\\
#        -I
#        C:\Project_data\ECM_data\symax_safetycore\Symax-sri_safetycore_unit_test\symax_sri_app-DQ_Test_6_Relay_Testing\generic_app_GMI\EWARM/../FlexMouse\\
#        -I
#        C:\Project_data\ECM_data\symax_safetycore\Symax-sri_safetycore_unit_test\symax_sri_app-DQ_Test_6_Relay_Testing\generic_app_GMI\EWARM/../FlexMouse/Kernel\\
#        -I
#        C:\Project_data\ECM_data\symax_safetycore\Symax-sri_safetycore_unit_test\symax_sri_app-DQ_Test_6_Relay_Testing\generic_app_GMI\EWARM/../FlexMouse/Drivers\\
#        -I
#        C:\Project_data\ECM_data\symax_safetycore\Symax-sri_safetycore_unit_test\symax_sri_app-DQ_Test_6_Relay_Testing\generic_app_GMI\EWARM/../FlexMouse/Memory\\
#        -I
#        C:\Project_data\ECM_data\symax_safetycore\Symax-sri_safetycore_unit_test\symax_sri_app-DQ_Test_6_Relay_Testing\generic_app_GMI\EWARM/../FlexMouse/Features\\
#        -I
#        C:\Project_data\ECM_data\symax_safetycore\Symax-sri_safetycore_unit_test\symax_sri_app-DQ_Test_6_Relay_Testing\generic_app_GMI\EWARM/../FlexMouse/Regal\\
#        -I
#        C:\Project_data\ECM_data\symax_safetycore\Symax-sri_safetycore_unit_test\symax_sri_app-DQ_Test_6_Relay_Testing\generic_app_GMI\EWARM/../Drivers/STM32G0xx_HAL_Driver/Inc/Legacy\\
#        -On)
#    Locale                       =  C
#    List file                    =
#        C:\Project_data\ECM_data\symax_safetycore\Symax-sri_safetycore_unit_test\symax_sri_app-DQ_Test_6_Relay_Testing\generic_app_GMI\EWARM\generic_app_stm32G030K8Tx\List\stm32g0xx_hal_msp.lst
#    Object file                  =
#        C:\Project_data\ECM_data\symax_safetycore\Symax-sri_safetycore_unit_test\symax_sri_app-DQ_Test_6_Relay_Testing\generic_app_GMI\EWARM\generic_app_stm32G030K8Tx\Obj\stm32g0xx_hal_msp.o
#    Runtime model:                  
#      __SystemLibrary            =  DLib
#      __dlib_full_locale_support =  1
#      __dlib_version             =  6
#
###############################################################################

C:\Project_data\ECM_data\symax_safetycore\Symax-sri_safetycore_unit_test\symax_sri_app-DQ_Test_6_Relay_Testing\generic_app_GMI\Src\stm32g0xx_hal_msp.c
      1          /* USER CODE BEGIN Header */
      2          /**
      3            ******************************************************************************
      4            * File Name          : stm32g0xx_hal_msp.c
      5            * Description        : This file provides code for the MSP Initialization 
      6            *                      and de-Initialization codes.
      7            ******************************************************************************
      8            * @attention
      9            *
     10            * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
     11            * All rights reserved.</center></h2>
     12            *
     13            * This software component is licensed by ST under BSD 3-Clause license,
     14            * the "License"; You may not use this file except in compliance with the
     15            * License. You may obtain a copy of the License at:
     16            *                        opensource.org/licenses/BSD-3-Clause
     17            *
     18            ******************************************************************************
     19            */
     20          /* USER CODE END Header */
     21          
     22          /* Includes ------------------------------------------------------------------*/
     23          #include "main.h"
     24          /* USER CODE BEGIN Includes */
     25          
     26          /* USER CODE END Includes */
     27          
     28          /* Private typedef -----------------------------------------------------------*/
     29          /* USER CODE BEGIN TD */
     30          
     31          /* USER CODE END TD */
     32          
     33          /* Private define ------------------------------------------------------------*/
     34          /* USER CODE BEGIN Define */
     35           
     36          /* USER CODE END Define */
     37          
     38          /* Private macro -------------------------------------------------------------*/
     39          /* USER CODE BEGIN Macro */
     40          
     41          /* USER CODE END Macro */
     42          
     43          /* Private variables ---------------------------------------------------------*/
     44          /* USER CODE BEGIN PV */
     45          
     46          /* USER CODE END PV */
     47          
     48          /* Private function prototypes -----------------------------------------------*/
     49          /* USER CODE BEGIN PFP */
     50          
     51          /* USER CODE END PFP */
     52          
     53          /* External functions --------------------------------------------------------*/
     54          /* USER CODE BEGIN ExternalFunctions */
     55          
     56          /* USER CODE END ExternalFunctions */
     57          
     58          /* USER CODE BEGIN 0 */
     59          
     60          /* USER CODE END 0 */
     61          /**
     62            * Initializes the Global MSP.
     63            */

   \                                 In section .text, align 2, keep-with-next
     64          void HAL_MspInit(void)
     65          {
   \                     HAL_MspInit: (+1)
   \        0x0   0xB081             SUB      SP,SP,#+4
     66            /* USER CODE BEGIN MspInit 0 */
     67          
     68            /* USER CODE END MspInit 0 */
     69          
     70            __HAL_RCC_SYSCFG_CLK_ENABLE();
   \        0x2   0x2001             MOVS     R0,#+1
   \        0x4   0x....             LDR      R1,??DataTable2  ;; 0x40021040
   \        0x6   0x680A             LDR      R2,[R1, #+0]
   \        0x8   0x4302             ORRS     R2,R2,R0
   \        0xA   0x600A             STR      R2,[R1, #+0]
   \        0xC   0x6809             LDR      R1,[R1, #+0]
   \        0xE   0x4008             ANDS     R0,R0,R1
   \       0x10   0x9000             STR      R0,[SP, #+0]
   \       0x12   0x9800             LDR      R0,[SP, #+0]
     71            __HAL_RCC_PWR_CLK_ENABLE();
   \       0x14   0x2080             MOVS     R0,#+128
   \       0x16   0x0540             LSLS     R0,R0,#+21       ;; #+268435456
   \       0x18   0x....             LDR      R1,??DataTable2_1  ;; 0x4002103c
   \       0x1A   0x680A             LDR      R2,[R1, #+0]
   \       0x1C   0x4302             ORRS     R2,R2,R0
   \       0x1E   0x600A             STR      R2,[R1, #+0]
   \       0x20   0x6809             LDR      R1,[R1, #+0]
   \       0x22   0x4008             ANDS     R0,R0,R1
   \       0x24   0x9000             STR      R0,[SP, #+0]
   \       0x26   0x9800             LDR      R0,[SP, #+0]
     72          
     73            /* System interrupt init*/
     74          
     75            /* USER CODE BEGIN MspInit 1 */
     76          
     77            /* USER CODE END MspInit 1 */
     78          }
   \       0x28   0xB001             ADD      SP,SP,#+4
   \       0x2A   0x4770             BX       LR               ;; return
     79          
     80          /**
     81          * @brief TIM_Base MSP Initialization
     82          * This function configures the hardware resources used in this example
     83          * @param htim_base: TIM_Base handle pointer
     84          * @retval None
     85          */

   \                                 In section .text, align 2, keep-with-next
     86          void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base) // TODO: PWM Input: Move to a Flexmouse driver file
     87          {
   \                     HAL_TIM_Base_MspInit: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0xB086             SUB      SP,SP,#+24
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x2214             MOVS     R2,#+20
   \        0x8   0x2100             MOVS     R1,#+0
   \        0xA   0xA801             ADD      R0,SP,#+4
   \        0xC   0x....'....        BL       memset
     88            GPIO_InitTypeDef GPIO_InitStruct = {0};
     89            if(htim_base->Instance==TIM1)
   \       0x10   0x6820             LDR      R0,[R4, #+0]
   \       0x12   0x....             LDR      R1,??DataTable2_2  ;; 0x40012c00
   \       0x14   0x4288             CMP      R0,R1
   \       0x16   0xD130             BNE      ??HAL_TIM_Base_MspInit_0
     90            {
     91            /* USER CODE BEGIN TIM1_MspInit 0 */
     92          
     93            /* USER CODE END TIM1_MspInit 0 */
     94              /* Peripheral clock enable */
     95              __HAL_RCC_TIM1_CLK_ENABLE();
   \       0x18   0x2080             MOVS     R0,#+128
   \       0x1A   0x0100             LSLS     R0,R0,#+4        ;; #+2048
   \       0x1C   0x....             LDR      R1,??DataTable2  ;; 0x40021040
   \       0x1E   0x680A             LDR      R2,[R1, #+0]
   \       0x20   0x4302             ORRS     R2,R2,R0
   \       0x22   0x600A             STR      R2,[R1, #+0]
   \       0x24   0x6809             LDR      R1,[R1, #+0]
   \       0x26   0x4008             ANDS     R0,R0,R1
   \       0x28   0x9000             STR      R0,[SP, #+0]
   \       0x2A   0x9800             LDR      R0,[SP, #+0]
     96          
     97              __HAL_RCC_GPIOA_CLK_ENABLE();
   \       0x2C   0x2001             MOVS     R0,#+1
   \       0x2E   0x....             LDR      R1,??DataTable2_3  ;; 0x40021034
   \       0x30   0x680A             LDR      R2,[R1, #+0]
   \       0x32   0x4302             ORRS     R2,R2,R0
   \       0x34   0x600A             STR      R2,[R1, #+0]
   \       0x36   0x6809             LDR      R1,[R1, #+0]
   \       0x38   0x4008             ANDS     R0,R0,R1
   \       0x3A   0x9000             STR      R0,[SP, #+0]
   \       0x3C   0x9800             LDR      R0,[SP, #+0]
     98              /**TIM1 GPIO Configuration
     99              PA8     ------> TIM1_CH1
    100              */
    101              GPIO_InitStruct.Pin = GPIO_PIN_8;
   \       0x3E   0x2080             MOVS     R0,#+128
   \       0x40   0x0040             LSLS     R0,R0,#+1        ;; #+256
   \       0x42   0x9001             STR      R0,[SP, #+4]
    102              GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
   \       0x44   0x2002             MOVS     R0,#+2
   \       0x46   0x9002             STR      R0,[SP, #+8]
    103              GPIO_InitStruct.Pull = GPIO_NOPULL;
   \       0x48   0x2100             MOVS     R1,#+0
   \       0x4A   0x9103             STR      R1,[SP, #+12]
    104              GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
   \       0x4C   0x9104             STR      R1,[SP, #+16]
    105              GPIO_InitStruct.Alternate = GPIO_AF2_TIM1;
   \       0x4E   0x9005             STR      R0,[SP, #+20]
    106              HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
   \       0x50   0xA901             ADD      R1,SP,#+4
   \       0x52   0x20A0             MOVS     R0,#+160
   \       0x54   0x05C0             LSLS     R0,R0,#+23       ;; #+1342177280
   \       0x56   0x....'....        BL       HAL_GPIO_Init
    107          
    108              /* TIM1 interrupt Init */
    109              HAL_NVIC_SetPriority(TIM1_BRK_UP_TRG_COM_IRQn, 0, 0);
   \       0x5A   0x2200             MOVS     R2,#+0
   \       0x5C   0x2100             MOVS     R1,#+0
   \       0x5E   0x200D             MOVS     R0,#+13
   \       0x60   0x....'....        BL       HAL_NVIC_SetPriority
    110              HAL_NVIC_EnableIRQ(TIM1_BRK_UP_TRG_COM_IRQn);
   \       0x64   0x200D             MOVS     R0,#+13
   \       0x66   0x....'....        BL       HAL_NVIC_EnableIRQ
    111              HAL_NVIC_SetPriority(TIM1_CC_IRQn, 0, 0);
   \       0x6A   0x2200             MOVS     R2,#+0
   \       0x6C   0x2100             MOVS     R1,#+0
   \       0x6E   0x200E             MOVS     R0,#+14
   \       0x70   0x....'....        BL       HAL_NVIC_SetPriority
    112              HAL_NVIC_EnableIRQ(TIM1_CC_IRQn);
   \       0x74   0x200E             MOVS     R0,#+14
   \       0x76   0x....'....        BL       HAL_NVIC_EnableIRQ
    113            /* USER CODE BEGIN TIM1_MspInit 1 */
    114          
    115            /* USER CODE END TIM1_MspInit 1 */
    116            }
    117          
    118          }
   \                     ??HAL_TIM_Base_MspInit_0: (+1)
   \       0x7A   0xB006             ADD      SP,SP,#+24
   \       0x7C   0xBD10             POP      {R4,PC}          ;; return
    119          
    120          /**
    121          * @brief TIM_Base MSP De-Initialization
    122          * This function freeze the hardware resources used in this example
    123          * @param htim_base: TIM_Base handle pointer
    124          * @retval None
    125          */

   \                                 In section .text, align 2, keep-with-next
    126          void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* htim_base) // TODO: PWM Input: Move to a Flexmouse driver file
    127          {
   \                     HAL_TIM_Base_MspDeInit: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
    128            if(htim_base->Instance==TIM1)
   \        0x4   0x6820             LDR      R0,[R4, #+0]
   \        0x6   0x....             LDR      R1,??DataTable2_2  ;; 0x40012c00
   \        0x8   0x4288             CMP      R0,R1
   \        0xA   0xD110             BNE      ??HAL_TIM_Base_MspDeInit_0
    129            {
    130            /* USER CODE BEGIN TIM1_MspDeInit 0 */
    131          
    132            /* USER CODE END TIM1_MspDeInit 0 */
    133              /* Peripheral clock disable */
    134              __HAL_RCC_TIM1_CLK_DISABLE();
   \        0xC   0x....             LDR      R0,??DataTable2  ;; 0x40021040
   \        0xE   0x6801             LDR      R1,[R0, #+0]
   \       0x10   0x....             LDR      R2,??DataTable2_4  ;; 0xfffff7ff
   \       0x12   0x400A             ANDS     R2,R2,R1
   \       0x14   0x6002             STR      R2,[R0, #+0]
    135          
    136              /**TIM1 GPIO Configuration
    137              PA8     ------> TIM1_CH1
    138              */
    139              HAL_GPIO_DeInit(GPIOA, GPIO_PIN_8);
   \       0x16   0x2180             MOVS     R1,#+128
   \       0x18   0x0049             LSLS     R1,R1,#+1        ;; #+256
   \       0x1A   0x20A0             MOVS     R0,#+160
   \       0x1C   0x05C0             LSLS     R0,R0,#+23       ;; #+1342177280
   \       0x1E   0x....'....        BL       HAL_GPIO_DeInit
    140          
    141              /* TIM1 interrupt DeInit */
    142              HAL_NVIC_DisableIRQ(TIM1_BRK_UP_TRG_COM_IRQn);
   \       0x22   0x200D             MOVS     R0,#+13
   \       0x24   0x....'....        BL       HAL_NVIC_DisableIRQ
    143              HAL_NVIC_DisableIRQ(TIM1_CC_IRQn);
   \       0x28   0x200E             MOVS     R0,#+14
   \       0x2A   0x....'....        BL       HAL_NVIC_DisableIRQ
    144            /* USER CODE BEGIN TIM1_MspDeInit 1 */
    145          
    146            /* USER CODE END TIM1_MspDeInit 1 */
    147            }
    148          
    149          }
   \                     ??HAL_TIM_Base_MspDeInit_0: (+1)
   \       0x2E   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \        0x0   0x4002'1040        DC32     0x40021040

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \        0x0   0x4002'103C        DC32     0x4002103c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \        0x0   0x4001'2C00        DC32     0x40012c00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \        0x0   0x4002'1034        DC32     0x40021034

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \        0x0   0xFFFF'F7FF        DC32     0xfffff7ff
    150          
    151          /* USER CODE BEGIN 1 */
    152          
    153          /* USER CODE END 1 */
    154          
    155          /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       4   HAL_MspInit
       8   HAL_TIM_Base_MspDeInit
         8   -> HAL_GPIO_DeInit
         8   -> HAL_NVIC_DisableIRQ
      32   HAL_TIM_Base_MspInit
        32   -> HAL_GPIO_Init
        32   -> HAL_NVIC_EnableIRQ
        32   -> HAL_NVIC_SetPriority
        32   -> memset


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
       4  ??DataTable2_3
       4  ??DataTable2_4
      44  HAL_MspInit
      48  HAL_TIM_Base_MspDeInit
     126  HAL_TIM_Base_MspInit

 
 238 bytes in section .text
 
 238 bytes of CODE memory

Errors: none
Warnings: none
